<beans:beans xmlns="http://www.springframework.org/schema/security"
    xmlns:beans="http://www.springframework.org/schema/beans"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans.xsd
    http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context.xsd
    http://www.springframework.org/schema/security
    http://www.springframework.org/schema/security/spring-security.xsd">
    
    <context:component-scan base-package="net.mypos.MyProjectBackend"></context:component-scan>
    <beans:bean id="passwordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder" />
    
    <http pattern="resources/**" security="none" />
    <http pattern="/favicon.ico" security="none" />
    
   <http>
        <intercept-url pattern="/manage/**" access="hasAuthority('ADMIN')" />
        <intercept-url pattern="/" access="hasAuthority('ADMIN')" />
        <intercept-url pattern="/**" access="permitAll" />
        <form-login login-page="/login" />
        <access-denied-handler error-page="/access-denied"/>
        <logout/>
    </http>
    
    <authentication-manager>
        <authentication-provider>
        	<password-encoder ref="passwordEncoder" />
            <jdbc-user-service data-source-ref="dataSource"
            users-by-username-query="select email, password, enabled from userinfo where email = ?"
            authorities-by-username-query="select email, role from userinfo where email = ?"
            />
        </authentication-provider>
    </authentication-manager>
    
</beans:beans>